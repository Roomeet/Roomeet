version: '2.2'

services:
  roomeet-server:
    build:
      context: './server'
      dockerfile: Dockerfile
    container_name: roomeet-server
    hostname: roomeet-server
    restart: unless-stopped
    ports:
      - '3001:3001'
    volumes:
      - ./server:/src/app
      - /src/app/node_modules
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - PORT=3001
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}
    command: sh -c 'npm run start'

    networks:
      roomeet-network:
        ipv4_address: 172.28.0.10

  socket-server:
    build:
      context: './communication'
      dockerfile: Dockerfile
    container_name: socket-server
    hostname: socket-server
    restart: unless-stopped
    ports:
      - '3002:3002'
    volumes:
      - ./communication:/src/app
      - /communication/node_modules
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - PORT=3002
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - ACCESS_TOKEN_SECRET=${ACCESS_TOKEN_SECRET}
    command: sh -c 'npm run start'

    networks:
      roomeet-network:
        ipv4_address: 172.28.0.11

  proxy-server:
    build:
      context: './proxy-server'
      dockerfile: Dockerfile
    container_name: proxy-server
    hostname: proxy-server
    restart: unless-stopped
    ports:
      - '8080:8080'
    volumes:
      - ./proxy-server:/src/app
      - /src/app/node_modules
    command: sh -c '/src/app/wait_for_it.sh roomeet-server:3001 && /src/app/wait_for_it.sh socket-server:3002 && npm run start'
    environment:
      - SERVER=roomeet-server
      - SOCKET=socket-server
    networks:
      roomeet-network:
        ipv4_address: 172.28.0.12

networks:
  roomeet-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
